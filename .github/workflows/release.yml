name: release.yml
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
env:
  # The project name specified in your Cargo.toml
  PROJECT_NAME: system_monitor
jobs:
  build:
    # Set the job to run on the platform specified by the matrix below
    runs-on: ${{ matrix.runner }}

    # Define the build matrix for cross-compilation
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin

    # The steps to run for each matrix item
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}

      - name: Release Binary
        shell: bash
        run: |
          BIN_SUFFIX=""
          if [[ "${{ matrix.runner }}" == "windows-latest" ]]; then
            BIN_SUFFIX=".exe"
          fi
          
          # The built binary output location
          BIN_OUTPUT="target/${{ matrix.target }}/release/${PROJECT_NAME}${BIN_SUFFIX}"
          
          # Define a better name for the final binary
          BIN_RELEASE="${PROJECT_NAME}-${{ matrix.name }}${BIN_SUFFIX}"
          
          mkdir -p release
          # Move the built binary where you want it
          mv "${BIN_OUTPUT}" "./release/${BIN_RELEASE}"
          mv "static" "./release"
          mv "templates" "./release"
          if [ ${{ runner.os }} == 'Linux' ] || [ ${{ runner.os }} == 'macOS' ]; then
            tar -czf "${{ matrix.name }}package.tar.gz" "release"
          else
            7z a "${{ matrix.name }}package.zip" "release"
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag: ${{ github.ref }}
          files: |
            ${{ matrix.name }}package.tar.gz
            ${{ matrix.name }}package.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}